WinNam = getList("image.titles");
Win = lengthOf(WinNam);


for ( p=0; p<Win; p++ ) { 
if(startsWith(WinNam[p], "Print_")){

close(WinNam[p]);


}
}


// i) Create the Printer File
//...........................................................................................
setBatchMode(true);

PopLocal = getDirectory("plugins") + "3 CamoWild/PopLocation.txt";
PopLocation = File.openAsString(PopLocal);
PopLocation=split(PopLocation, "\n");
PopLocation = PopLocation[0];
PopLocation = PopLocation;

populationDir = PopLocation;

PopulationSet =populationDir+"PopulationSettings.txt";
PopulationSettings = File.openAsString(PopulationSet );
PopulationSettings = split(PopulationSettings, "\n");

TreatmentN = split(PopulationSettings[0], "\t");
TreatmentN  = TreatmentN [1];

RepeatN = split(PopulationSettings[1], "\t");
RepeatN  = RepeatN [1];

GroupSize = split(PopulationSettings[3], "\t");
GroupSize = parseFloat(GroupSize[1]);

GroupMethod = split(PopulationSettings[4], "\t");
GroupMethod = GroupMethod[1];

TargetSize = split(PopulationSettings[5], "\t");
TargetSize = parseFloat(TargetSize[1]);

PrintArrange = split(PopulationSettings[7], "\t");

maxPerRow = parseFloat(PrintArrange [1]);

xSpacing = parseFloat(PrintArrange [2]);

ySpacing = parseFloat(PrintArrange [3]);

nCopies = parseFloat(PrintArrange [4]);




//Get Gen IDs
//--------------------------------
GeneratList  =  getFileList(populationDir);
GeneratArray = newArray();
GenSurvArray  = newArray();

for(i=0; i<GeneratList.length; i++) { // list all .txt files

	if(endsWith(GeneratList[i], "_genes.txt")==1){
		GeneratArray = Array.concat(GeneratArray, GeneratList[i]);
	}	

	if(endsWith(GeneratList[i], "_ranks.txt")==1){
		GenSurvArray = Array.concat(GenSurvArray, GeneratList[i]);
	}											
		
}

genNum = GeneratArray.length-1;
currentGen = "gen_"+genNum+"_genes.txt";
currentGenPath = populationDir + currentGen;


genString = File.openAsString(currentGenPath);
genRows = split(genString, "\n");

genIDs = newArray(genRows.length-1);

for(i=0; i<genIDs.length; i++){
tArray = split(genRows[i+1], "\t");
genIDs[i] = tArray [0];
}

//Assign New Name
//--------------------------------



printIDs =Array.copy(genIDs);


numIDs = genIDs.length;
numBlocks = numIDs/GroupSize;
//codes=newArray("Red","Green","Blue","Yellow","Cyan","Magenta","Orange","Pink","White","Ebony");
colourCode= newArray("R","G","B","Y","C","M","O","P","W","E");
colourCodeArray = Array.copy(colourCode);



nameArray = newArray(numIDs);



sTreat = substring(TreatmentN,0,1) +substring(TreatmentN,lengthOf(TreatmentN)-2,lengthOf(TreatmentN));
sRep = RepeatN;
L=-1;
for(i=0; i<numBlocks;i++){
for(j=0; j<GroupSize;j++){
L = L+1;

tArray =  newArray(sTreat, sRep, i+1, colourCodeArray[j]);
tStr = String.join(tArray, ".");
nameArray[L] = tStr;
}
}


// If Random
//--------------------------------------------
if(GroupMethod == "Random"){
randArray = Array.copy(nameArray);

for(i=0;i<randArray.length;i++){
randArray[i] = random();
}

randArray = Array.rankPositions(randArray);

genIDs2 = Array.copy(genIDs);


for(i=0;i<randArray.length;i++){
rIndex = randArray[i];
genIDs2[i] = genIDs[rIndex];
}

for(i=0;i< nameArray.length;i++){
printIDs[i] = nameArray[i];
}


} // (random)


// If Ranked
//--------------------------------------------
if(GroupMethod == "Ranked"){
rankArray = newArray();
tArray = newArray(GroupSize);
tArray2 = newArray(GroupSize);
randArray = newArray(GroupSize);

for(i=0; i<numBlocks;i++){


for(j=0; j<GroupSize;j++){

tIndex = j*numBlocks + i;

tArray[j]=genIDs[tIndex ];

} // ( j )

for(z=0; z<randArray.length; z++){
randArray[z] = random();
}
randArray = Array.rankPositions(randArray);

for(z=0;z<randArray.length;z++){
rIndex = randArray[z];
tArray2[z] = tArray[rIndex];
}

rankArray=Array.concat(rankArray, tArray2);


} //( i )







genIDs2 =rankArray;



for(i=0;i< nameArray.length;i++){
printIDs[i] = nameArray[i];
}


} // (Ranked)


genIDs2 =Array.concat("ID", genIDs2);
printIDs =Array.concat("ID", printIDs);


//Save Printer Ids
//--------------------------------

	dataFile = File.open(populationDir + "Printer_"+genNum+".txt");
	
	for(i=0; i<genIDs2.length; i++){
	saveArray = newArray(genIDs2[i], printIDs[i]);
	saveStr = String.join(saveArray, "\t");
	print(dataFile, saveStr);
	}
	File.close(dataFile);



// ii) Create the Printer Blocks
//...........................................................................................
//Each block needs to fit on an A4 page. If the block size is greater than an A4 it will divide it in 2.

// Calculate whether block is bigger than A4

pixelSize = 8.836272040302267*TargetSize;

TitleSpace = 50;

targetsPerSheet = genIDs.length*nCopies;

sheetXScale = xSpacing + ((TargetSize+xSpacing)*maxPerRow);

nRows = targetsPerSheet/maxPerRow;

sheetYScale = TitleSpace+ ySpacing*2 + (((TargetSize*1.2)+ySpacing)*Math.ceil(nRows));


TitleString = "Print_"+TreatmentN +"_Repeat"+RepeatN;

newImage(TitleString, "RGB white", sheetXScale, sheetYScale, 1);

//Title

TitleSize =75;
setColor("#050505");
setFont("Arial", TitleSize , "bold");
setJustification("center");

drawString(TitleString, sheetXScale/2, TitleSize*1.5);

// Images

spawnCount = 0;

currentPhenotypes = "GenPat_"+genNum+"/";

printIDs2 = Array.deleteIndex(printIDs,0);
genIDs3 = Array.deleteIndex(genIDs2,0);

printIDs3 = newArray();
genIDs4 = newArray();

for(i=0;i<nCopies;i++){
printIDs3=Array.concat(printIDs3,printIDs2);
genIDs4=Array.concat(genIDs4,genIDs3);
}



for(j=0; j<Math.ceil(nRows); j++){
for(i=0; i<maxPerRow; i++){


if(spawnCount<genIDs4.length){

	xPos = xSpacing + (TargetSize+xSpacing)*i;
	yPos = TitleSpace + ySpacing*2 + ((TargetSize*1.2)+ySpacing)*j;
	
	
	open(PopLocation+currentPhenotypes+genIDs4[spawnCount]+".png");
	rename(genIDs4[spawnCount]);
	run("Size...", "width=&TargetSize height=&TargetSize depth=1 constrain average interpolation=None");
	
	Margin=TargetSize+0;
	setBackgroundColor(255,255,255);
	setColor("white");
	run("Canvas Size...", "width=&Margin height=&Margin position=Center");

	Tab = Margin*1.2;
	Spacing = (Tab-Margin);
	FontSize = (Tab-Margin)/2;
	run("Canvas Size...", "width=&Margin height=&Tab position=Top-Center");
	
	setColor("#050505");
	setFont("Arial", FontSize , "bold");
	setJustification("center");

	drawString(printIDs3[spawnCount], Margin/2, Tab-(Spacing-FontSize)/2);
	pasteW = getWidth;
	pasteH = getHeight;
	run("Copy");
	close();
	
	selectImage(TitleString);

	makeRectangle(xPos,yPos,pasteW,pasteH );
	
	setPasteMode("Transparant-zero");
	run("Paste");
	
}



	//Mark Divider Copy

	if(spawnCount/genIDs.length == parseInt(spawnCount/genIDs.length) && spawnCount<genIDs4.length){

	markerWidth = xSpacing + (TargetSize+xSpacing)*GroupSize-1;
	
	markerX  = xPos;
	markerY = yPos - ySpacing/2 - 5;

	makeRectangle(markerX,markerY,	markerWidth,10);

	fill();


	}
	
	spawnCount = spawnCount+1;	
	

	//Mark Divider Group

	if(spawnCount/GroupSize == parseInt(spawnCount/GroupSize ) && spawnCount>0){

	markerX = xPos + pasteW - 5 + xSpacing/2;
	markerY = yPos;

	makeRectangle(markerX,markerY,10,pasteH);

	fill();


	}



}

}

run("Select None");

setBatchMode("show");



saveDIR = populationDir+"printSheet_"+genNum+".txt";
saveAs("PNG", saveDIR);

 



//Save Spawn Locations
//--------------------------------


spawnX = newArray();
spawnY = newArray();
spawnCol = colourCodeArray;
spawnGroup = newArray(genIDs.length/GroupSize);

gridX = newArray(1,2,3,4,5);
gridY = newArray(1,2,3,4,5);




	dataFile = File.open(populationDir+"SpawnLocation_"+genNum+".txt");
	
	for(i=0; i<spawnGroup.length; i++){
	
	gridX2 = Array.deleteIndex( gridX, parseInt(random()*(gridX.length-1) ) );
	
	saveArray=newArray();
	
	xRecord = newArray();
	yRecord = newArray();
	
		for(j=0; j<GroupSize; j++){
		
		pointX = gridX2[j];
		
		pointY = gridY[parseInt(random()*(gridY.length-1))];
		
		Gate=1;
		
		while(Gate==1 && j>0){
		
		pointY = gridY[random()*(gridY.length-1)];
		
		difY = Math.sqrt( Math.sqr( pointY - yRecord[j-1] ) );
		
		if(difY>1) Gate=0;
		
		}
		
		tStr = spawnCol[j]  + "." + pointX  + "." +  pointY;
		
		saveArray = Array.concat(saveArray, tStr );
		
		xRecord = Array.concat(xRecord,pointX);
		
		yRecord = Array.concat(yRecord,pointY);
		
		}
	
	saveArray = Array.concat("Group: "+i+1, saveArray);
	
	saveStr =  String.join(saveArray, "\t");
	
	print(dataFile, saveStr);
	}
	
	
	File.close(dataFile);







